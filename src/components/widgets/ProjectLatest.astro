---
import { APP_PROJECT } from '~/utils/config';

import Grid from '~/components/project/Grid.astro';

import { getProjectPermalink } from '~/utils/permalinks';
import { findLatestProjects } from '~/utils/project';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Widget } from '~/types';
import Button from '../ui/Button.astro';

export interface Props extends Widget {
  title?: string;
  tagline?: string;
  linkText?: string;
  linkUrl?: string | URL;
  information?: string;
  count?: number;
}

const {
  tagline,
  title = await Astro.slots.render('title'),
  linkText = 'View all projects',
  linkUrl = getProjectPermalink(),
  information = await Astro.slots.render('information'),
  count = 4,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const projects = APP_PROJECT.isEnabled ? await findLatestProjects({ count }) : [];
---

{
  APP_PROJECT.isEnabled ? (
    <WidgetWrapper id={id} isDark={isDark} containerClass={classes?.container} bg={bg}>
      <div class="flex flex-col justify-between mb-8">
        {tagline && <div class="text-md text-center mb-4 font-medium">{tagline}</div>}

        {title && (
          <h2
            class="text-3xl text-center font-bold tracking-tight sm:text-4xl sm:leading-none group font-heading mb-4"
            set:html={title}
          />
        )}

        {information && <p class="text-muted dark:text-slate-400 lg:text-sm text-center" set:html={information} />}
      </div>

      <Grid projects={projects} />

      {APP_PROJECT.list.isEnabled && linkText && linkUrl && (
        <div class="flex justify-center">
          <Button variant="secondary" href={linkUrl}>
            {' '}
            {linkText}
          </Button>
        </div>
      )}
    </WidgetWrapper>
  ) : (
    <Fragment />
  )
}
